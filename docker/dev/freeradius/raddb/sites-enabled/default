
server default {
listen {
	type = auth
	ipaddr = *
	port = 0
	limit {
	      max_connections = 16
	      lifetime = 0
	      idle_timeout = 900
	}
}
listen {
	ipaddr = *
	port = 0
	type = acct
	limit {
	}
}
listen {
	type = auth
	ipv6addr = ::	# any.  ::1 == localhost
	port = 0
	limit {
	      max_connections = 16
	      lifetime = 0
	      idle_timeout = 30
	}
}
listen {
	ipv6addr = ::
	port = 0
	type = acct
	limit {
	}
}
authorize {
	filter_username
	preprocess

	# SSID-spezifische Logik vor Standard-Modulen
	# Called-Station-Id Format: AA-BB-CC-DD-EE-FF:SSID-Name
	if (&Called-Station-Id =~ /:eduroam$/i) {
		# Operator-Name für eduroam Federation
		update request {
			&Operator-Name := "1thga.de"
		}
		# Realm-basierte EAP-Instanz Auswahl (ad.est1816.de)
		if (&User-Name =~ /^host\/.*\.ad\.est1816\.de$/i) {
			eap-ad-est1816-de {
				ok = return
			}
		}
		# Realm-basierte EAP-Instanz Auswahl (tfh-bochum.de)
		elsif (&User-Name =~ /^host\/.*\.tfh-bochum\.de$/i) {
			eap-tfh-bochum-de {
				ok = return
			}
		}
		# Standard EAP für TTLS-PAP Benutzer
		else {
			eap {
				ok = return
			}
		}
	}
	# IoT Geräte
	elsif (&Called-Station-Id =~ /:iotdevices$/i) {
		update request {
			&User-Name := "%{Calling-Station-Id}"
		}
		sql
		if (ok) {
			update control {
				&Auth-Type := Accept
			}
			ok = return
		}
	}
	# Captive Portal
	elsif (&Called-Station-Id =~ /:THGA$/i) {
		sql
		-ldap
		if (ok) {
			update control {
				&Auth-Type := Accept
			}
			ok = return
		}
	}
	suffix
	files
	expiration
	logintime
	pap
	Autz-Type New-TLS-Connection {
		  ok
	}
}
authenticate {
	Auth-Type PAP {
		pap
	}

	# sql und ldap setzen Accept in Authorize
	Auth-Type Accept {
		ok  # Akzeptiere ohne weitere Prüfung
	}
	eap
	eap-ad-est1816-de
	eap-tfh-bochum-de
}
preacct {
	preprocess
	acct_unique
	suffix
	files
}
accounting {
	detail
	sql
	exec
	attr_filter.accounting_response
}
session {
}
post-auth {
	if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
		update reply {
			&User-Name !* ANY
		}
	}
	update {
		&reply: += &session-state:
	}

	# VLAN-Zuweisung
	if (&Called-Station-Id =~ /:eduroam$/i) {
		update reply {
			&Tunnel-Type := VLAN
			&Tunnel-Medium-Type := IEEE-802
			&Tunnel-Private-Group-Id := "144"
		}
		
		# Spezielle VLANs für Computer-Accounts
		if (&User-Name =~ /^host\/.*\.ad\.est1816\.de$/i) {
			update reply {
				&Tunnel-Private-Group-Id := "82"
			}
		}
		elsif (&User-Name =~ /^host\/.*\.tfh-bochum\.de$/i) {
			update reply {
				&Tunnel-Private-Group-Id := "124"
			}
		}
	}
	elsif (&Called-Station-Id =~ /:iotdevices$/i) {
		update reply {
			&Tunnel-Type := VLAN
			&Tunnel-Medium-Type := IEEE-802
			&Tunnel-Private-Group-Id := "148"
		}
	}
	elsif (&Called-Station-Id =~ /:THGA$/i) {
		update reply {
			&Tunnel-Type := VLAN
			&Tunnel-Medium-Type := IEEE-802
			&Tunnel-Private-Group-Id := "140"
		}
	}

	sql
	exec
	remove_reply_message_if_eap
	Post-Auth-Type REJECT {
		sql
		attr_filter.access_reject
		eap
		remove_reply_message_if_eap
	}
	Post-Auth-Type Challenge {
	}
	Post-Auth-Type Client-Lost {
	}
	if (EAP-Key-Name && &reply:EAP-Session-Id) {
		update reply {
			&EAP-Key-Name := &reply:EAP-Session-Id
		}
	}
}
pre-proxy {
}
post-proxy {
}
}
