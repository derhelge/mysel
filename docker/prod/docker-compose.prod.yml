# docker/prod/docker-compose.prod.yml
services:
  django:
    container_name: django
    build:
      context: ../../myselfservice
      target: production
    restart: unless-stopped
    logging:
      driver: "journald"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env.prod
    environment:
      - DEBUG=False
      - PYTHONPATH=/app
    healthcheck:
      test: ["CMD-SHELL", "python manage.py check"]
      interval: 10s
      timeout: 3s
      retries: 10
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    networks:
      - web
      - backend

  postgres:
    image: postgres:15
    container_name: postgres
    env_file:
      - .env.prod
    volumes:
      - ./postgres/init-django-db.sh:/docker-entrypoint-initdb.d/init-django-db.sh
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    logging:
      driver: "journald"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U $${POSTGRES_DJANGO_USER} -d $${POSTGRES_DJANGO_DB}'"]
      interval: 10s
      timeout: 1s
      retries: 5
    command:
      - "postgres" 
      - "-c"
      - "wal_level=logical"

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - static_volume:/usr/share/nginx/html/static:ro  # Match mit nginx conf
      - media_volume:/usr/share/nginx/html/media:ro    # Match mit nginx conf
      - ./nginx:/etc/nginx/conf.d
    logging:
      driver: "journald"
    ports:
      - "8080:80"
    depends_on:
      - django
    networks:
      - web

networks:
  web:
  backend:

volumes:
  static_volume:
  media_volume:
  postgres_data:
